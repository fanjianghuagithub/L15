20210105：
此版本为debug版本，未经授权时，算法每5分钟输出1秒单频噪声。
注意：此版本升级了授权相关接口。
使用license授权方式时，请在factory_section.c文件中的factory_section_open函数中调用算法库提供的接口函数sndp_auth_get_bt_address；
    if (1 == nv_record_dev_rev)
    {
        if (factory_section_p->head.crc !=
	crc32(0,(unsigned char *)(&(factory_section_p->head.reserved0)),
	sizeof(factory_section_t)-2-2-4-(5+63+2+2+2+1+8)*sizeof(int))){
	        factory_section_p = NULL;
	        return -1;
        }

    memcpy(bt_addr, factory_section_p->data.bt_address, 6);
    memcpy(ble_addr, factory_section_p->data.ble_address, 6);
#if 1
    sndp_auth_get_bt_address(nv_record_dev_rev);
#endif
    TRACE("%s sucess btname:%s", __func__, factory_section_p->data.device_name);
    }
    else
    {
        // check the data length
        if (((uint32_t)(&((factory_section_t *)0)->data.rev2_reserved0)+
            factory_section_p->data.rev2_data_len) > 4096)
        {
             TRACE("nv rec dev data len %d has exceeds the facory sector size!.",
	  factory_section_p->data.rev2_data_len);
             return -1;
        }

        if (factory_section_p->data.rev2_crc !=
            crc32(0,(unsigned char *)(&(factory_section_p->data.rev2_reserved0)),
            factory_section_p->data.rev2_data_len)){
                factory_section_p = NULL;
                return -1;
        }

    memcpy(bt_addr, factory_section_p->data.rev2_bt_addr, 6);
    memcpy(ble_addr, factory_section_p->data.rev2_ble_addr, 6);
#if 1
    sndp_auth_get_bt_address(nv_record_dev_rev);
#endif
    TRACE("%s sucess btname:%s", __func__, factory_section_p->data.rev2_bt_name);
    }
使用usb key授权方式时，请在norflash_drv.c文件中调用算法库提供的接口函数sndp_auth_get_norflash_uuid，
int norflash_get_unique_id(uint8_t *value, uint32_t len)
{
    uint32_t param;
    uint8_t cmd;

    norflash_pre_operation();

    if (flash_list[flash_idx]->id[0] == NORFLASH_XTS_ID_PREFIX) {
        if (len > XTS_UNIQUE_ID_LEN) {
            len = XTS_UNIQUE_ID_LEN;
        }
        param = XTS_UNIQUE_ID_PARAM;
        cmd = XTS_UNIQUE_ID_CMD;
    } else {
        if (len > NORFLASH_UNIQUE_ID_LEN) {
            len = NORFLASH_UNIQUE_ID_LEN;
        }
        param = 0;
        cmd = GD25Q32C_CMD_UNIQUE_ID;
    }
#if 1
    sndp_auth_get_norflash_uuid(cmd, (uint8_t *)&param, sizeof(param), value, len);
#else
    norflash_read_reg_ex(cmd, (uint8_t *)&param, sizeof(param), value, len);
#endif

    norflash_post_operation();

    return 0;
}
并把sndp_license_Api.o添加到boot的sram、data和bss段。